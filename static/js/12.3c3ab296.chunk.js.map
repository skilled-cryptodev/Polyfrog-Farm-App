{"version":3,"sources":["components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","hooks/useStake.ts","components/Tags.tsx","config/index.ts","hooks/useApprove.ts","hooks/useUnstake.ts","components/layout/Flex.tsx","hooks/useBlock.ts","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/components/Coming.tsx","views/Pools/Syrup.tsx"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","TranslateString","useI18n","toLocaleString","onClick","BigNumber","times","toString","useSmartStake","sousId","isUsingBnb","dispatch","useDispatch","useWallet","account","smartChefContract","useSmartChef","handleStake","useCallback","amount","a","stakeFn","smartStakeBnb","smartStake","updateUserStakedBalance","String","updateUserBalance","onStake","useStake","pid","masterChefContract","useMasterchef","stake","txHash","fetchFarmUserDataAsync","console","info","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","useApprove","lpContract","onApprove","approve","tx","useSousApprove","updateUserAllowance","useSmartUnstake","onUnstake","smartChefUnstake","updateUserPendingReward","useUnstake","unstake","FlexLayout","useBlock","BlockContext","StyledLabel","isFinished","Label","text","StyledText","Text","isDisabled","color","textDisabled","Balance","fontSize","decimals","unit","previousValue","useRef","useEffect","current","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","fullWidth","disabled","WithdrawModal","CardTitle","Card","card","background","isActive","Title","ActionLink","OldSyrupTitle","hasBalance","href","target","StyledButton","button","padding","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","PoolCategory","BINANCE","CORE","COMMUNITY","StyledFooter","isDark","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","blocksRemaining","totalStaked","blocksUntilStart","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","image","stakingTokenName","stakingTokenAddress","harvest","tokenDecimals","apy","startBlock","endBlock","userData","stakingLimit","burnFee","weeklyroi","log","isBnbPool","stakingTokenContract","useERC20","process","block","onReward","useSmartChefHarvest","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","earnings","pendingReward","Math","isOldSyrup","QuoteToken","SYRUP","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","pow","useModal","isGreaterThan","burnFeeBP","onPresentDeposit","onPresentWithdraw","handleApprove","error","style","marginBottom","display","alignItems","flex","src","width","height","alt","HarvestButton","getBalanceNumber","UnlockButton","eq","role","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","as","textSubtle","DetailPlaceholder","Value","Footer","Coming","external","mb","Hero","Farm","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","priceToBnb","tokenPrice","quoteToken","tokenPriceBN","BUSD","poolsWithApy","rewardTokenFarm","find","f","tokenSymbol","stakingTokenFarm","stakingTokenPriceInBNB","HONEST","tokenPriceVsQuote","quoteTokenSymbol","totalRewardPricePerYear","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","Divider","Flex","exact","orderBy"],"mappings":"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","file":"static/js/12.3c3ab296.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {\n        depositFeeBP > 0 ?\n          <StyledMaxText>\n            {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\n          </StyledMaxText>\n          :\n          null\n      }\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, smartStakeBnb, smartStake } from 'utils/callHelpers'\nimport { useMasterchef, useSmartChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\n\nexport const useSmartStake = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const smartChefContract = useSmartChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const stakeFn = isUsingBnb ? smartStakeBnb : smartStake\n      await stakeFn(smartChefContract, amount, account)\n      dispatch(updateUserStakedBalance(String(sousId), account))\n      dispatch(updateUserBalance(String(sousId), account))\n    },\n    [account, dispatch, isUsingBnb, smartChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant='secondary' outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant='textSubtle' outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant='binance' outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(0.5)\nexport const BLOCKS_PER_YEAR = new BigNumber(15768000)\nexport const BSC_BLOCK_TIME = 2\n\nexport const CAKE_POOL_PID = 1\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useLottery, useSmartChef, useForest } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId: number) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const smartChefContract = useSmartChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, smartChefContract, account)\n      dispatch(updateUserAllowance(String(sousId), account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, smartChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n\n// Approve the forest\nexport const useForestApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const forestContract = useForest()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, forestContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, forestContract])\n\n  return { onApprove: handleApprove }\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, smartChefUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSmartChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSmartUnstake = (sousId: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const smartChefContract = useSmartChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      await smartChefUnstake(smartChefContract, amount, account)\n      dispatch(updateUserStakedBalance(String(sousId), account))\n      dispatch(updateUserBalance(String(sousId), account))\n      dispatch(updateUserPendingReward(String(sousId), account))\n    },\n    [account, dispatch, smartChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  burnFeeBP?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max])\n\n  // console.log(\"depositFeeBP\",burnFeeBP)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        // burnFee={burnFeeBP}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n  unit?: string\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n  unit,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(411, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} unit={unit} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSmartStake } from 'hooks/useStake'\nimport { useSmartUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSmartChefHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n    burnFee,\n    weeklyroi\n  } = pool\n\n  console.log(\"burnFee\",burnFee)\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress[CHAIN_ID])\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSmartStake(sousId, isBnbPool)\n  const { onUnstake } = useSmartUnstake(sousId)\n  const { onReward } = useSmartChefHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n      burnFeeBP={burnFee * 10}\n    />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished}>\n      {isFinished && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/bnbpool/${tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance\n              value={getBalanceNumber(earnings, tokenDecimals)}\n              decimals={tokenName === 'BTCB' ? 5 : 3}\n              isDisabled={isFinished}\n            />\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  Approve\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>Weekly ROI:</div>\n          {weeklyroi}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🐘 {' '}\n            </span>\n            Your Stake:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n        {burnFee > 0 ? (\n          <StyledDetails>\n            <div style={{ flex: 1 }}>\n              <span role=\"img\" aria-label={stakingTokenName}>\n                🔥{' '}\n              </span>\n              Deposit fee (Burned):\n            </div>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={burnFee / 10} decimals={1} unit=\"%\" />\n          </StyledDetails>\n        ) : (\n          ''\n        )}\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n        unit=\"blocks\"\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n  padding: 3px 0;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Image, Button } from '@pancakeswap-libs/uikit'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport CardTitle from './CardTitle'\nimport Card from'./Card'\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n  padding: 10px 0;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n  padding: 4px 0;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <div style={{ padding: '24px' }}>\n        <CardTitle>{TranslateString(414, 'Your Honest Project')}</CardTitle>\n        <Image src=\"/images/applynow.png\" width={64} height={64} alt=\"Your project\" />\n        <Balance>???</Balance>\n        <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\n        <Button variant=\"secondary\" as=\"a\" href=\"https://t.me/polyHonesthead\" external fullWidth mb=\"16px\">\n          {TranslateString(418, 'Apply Now')}\n        </Button>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          <Value>???</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label=\"polyHonest\">\n             {' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Value>???</Value>\n        </DetailPlaceholder>\n      </div>\n      <Footer>\n        <CommunityTag />\n      </Footer>\n    </Card>\n  )\n}\n\nexport default Coming\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport {\n  useFarms,\n  usePriceBnbBusd,\n  usePools,\n} from 'state/hooks'\nimport { QuoteToken } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\nimport Coming from './components/Coming'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB' || tokenName === 'WBNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = priceToBnb(\n      QuoteToken.HONEST,\n      stakingTokenFarm?.tokenPriceVsQuote,\n      stakingTokenFarm?.quoteTokenSymbol,\n    )\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n    // console.log('pool.tokenName', pool.tokenName)\n    // console.log('rewardTokenPriceInBNB', rewardTokenPriceInBNB.toString())\n    // console.log('stakingTokenPriceInBNB', stakingTokenPriceInBNB.toString())\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    let totalStakingTokenInPool = new BigNumber(0)\n    totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n\n    // tokens per block * price of CAKE * blocks_per_year / ( tokens in pool x salt price) * 100\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            Jungle Pools\n          </Heading>\n          <ul>\n            <li>Stake honest to earn new tokens</li>\n            <li>You can unstake at any time.</li>\n            <li>Rewards are calculated per block</li>\n          </ul>\n        </div>\n        <img src=\"/images/syrup.png\" alt=\"SYRUP POOL icon\" width={410} height={191} />\n      </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n            <Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n"],"sourceRoot":""}